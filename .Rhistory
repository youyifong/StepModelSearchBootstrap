plot(x, y,cex=0.4, xlab="x", ylab="Y", cex.axis=0.8,main="Quad")
# with z and error
datq <- sim.step(threshold.type="quadratic",X.ditr = "unif",thres=4.7,mu.x=4.7,sd.x=1.4,mu.z=0,sd.z=1,coef.X=coef.X,eps.sd=0.3,seed=1,n=250)
x=datq$x
y=datq$Y
plot(x, y,cex=0.4, xlab="x", ylab="Y", cex.axis=0.8,main="Quad")
mydev.off(file="figures/data_generating")
source("sim.step.R")
# without z and error
coef.X <- as.matrix(c(1,log(1.4),-log(.67)))
library(kyotil)
myfigure(mfcol=c(2,5),height = 5, width = 11)
#par(mfrow=c(2,5),mai=c(0.6,0.5,0.5,0.2))
#Step
# no z and error
dats <- sim.step(threshold.type="step",X.ditr = "unif",thres=4.7,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=0,coef.X=coef.X,eps.sd=0,seed=1,n=250)
x=dats$x
y=dats$Y
plot(x, y, ylim=c(-0.5,3.0),cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Step")
# with z and error
dats <- sim.step(threshold.type="step",X.ditr = "unif",thres=4.7,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=1,coef.X=coef.X,eps.sd=0.3,seed=1,n=250)
x=dats$x
y=dats$Y
plot(x, y, ylim=c(-0.5,3.0),cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Step")
# Sig_15
# no z and error
dat15 <-sim.step(threshold.type="sigmoid",X.ditr="unif",thres=4.7,shape=15,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=0,coef.X=coef.X,eps.sd=0,seed=1,n=250)
x=dat15$x
y=dat15$Y
plot(x, y, ylim=c(-0.5,3.0),cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Sig_15")
# with z and error
dat15 <-sim.step(threshold.type="sigmoid",X.ditr="unif",thres=4.7,shape=15,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=1,coef.X=coef.X,eps.sd=0.3,seed=1,n=250)
x=dat15$x
y=dat15$Y
plot(x, y,cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Sig_15")
#Sig_5
# no z and error
dat5 <-sim.step(threshold.type="sigmoid",X.ditr="unif",thres=4.7,shape=5,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=0,coef.X=coef.X,eps.sd=0,seed=1,n=250)
x=dat5$x
y=dat5$Y
plot(x, y,ylim=c(-0.5,3.0),cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Sig_5")
# with z and error
dat5 <-sim.step(threshold.type="sigmoid",X.ditr="unif",thres=4.7,shape=5,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=1,coef.X=coef.X,eps.sd=0.3,seed=1,n=250)
x=dat5$x
y=dat5$Y
plot(x, y,cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Sig_5")
#Sig_1
# no z and error
dat1 <-sim.step(threshold.type="sigmoid",X.ditr="unif",thres=4.7,shape=1,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=0,coef.X=coef.X,eps.sd=0,seed=1,n=250)
x=dat1$x
y=dat1$Y
plot(x, y,cex=0.4,ylim=c(-0.5,3.0), xlab="X", ylab="Y", cex.axis=0.8,main="Sig_1")
# with z and error
dat1 <-sim.step(threshold.type="sigmoid",X.ditr="unif",thres=4.7,shape=1,mu.x=4.7,sd.x=1.6,mu.z=0,sd.z=1,coef.X=coef.X,eps.sd=0.3,seed=1,n=250)
x=dat1$x
y=dat1$Y
plot(x, y,cex=0.4, ylim=c(-0.5,3.0), xlab="X", ylab="Y", cex.axis=0.8,main="Sig_1")
#Quad
# no z and error
datq <- sim.step(threshold.type="quadratic",X.ditr = "unif",thres=4.7,mu.x=4.7,sd.x=1.4,mu.z=0,sd.z=0,coef.X=coef.X,eps.sd=0,seed=1,n=250)
x=datq$x
y=datq$Y
plot(x, y,cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Quad")
# with z and error
datq <- sim.step(threshold.type="quadratic",X.ditr = "unif",thres=4.7,mu.x=4.7,sd.x=1.4,mu.z=0,sd.z=1,coef.X=coef.X,eps.sd=0.3,seed=1,n=250)
x=datq$x
y=datq$Y
plot(x, y,cex=0.4, xlab="X", ylab="Y", cex.axis=0.8,main="Quad")
mydev.off(file="figures/data_generating")
l
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=data_step$mlog,labels=data_step$m,cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=data_step$mlog,labels=data_step$m,cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=data_step$mlog,labels=data_step$m,cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
axis(2,at=data_nonstep$mlog,labels=data_nonstep$m,cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
a<-data[which(data$id==2 |data$id==3 | data$id==15),]
##### m-bootstrap
#colnames(data) <- c("id","x", "no","y","steep","no")
##### sub-bootstrap
colnames(data) <- c("id","x", "y","no")
colnames(data) <- c("id","x", "y","no","steep","no")
colnames(data) <- c("model","x", "y","no","no","steep","no","no")
#head(data, 10)
data$ylog <- log(data$y)
data$xlog <- log(data$x)
data$ind <- ifelse(data$model=="step",1,0)
a$ylog <- log(a$y)
a$xlog <- log(a$x)
### with steepness
lm(ylog~xlog+steep,data=data)
### logm=-0.5658+1.0018logn-0.0030steep
# steep1: 136/250; 277/500; 567/1000; 862/1500; 1160/2000
# steep5: 133/250; 272/500; 556/1000; 845/1500; 1137/2000
# steep15: 126/250; 259/500; 529/1000; 804/1500; 1082/2000
### logm=-0.785+1.032logn-0.005steep
# steep1: 136/250; 277/500; 567/1000; 862/1500; 1160/2000
# steep5: 133/250; 272/500; 556/1000; 845/1500; 1137/2000
# steep15: 126/250; 259/500; 529/1000; 804/1500; 1082/2000
### logm=-0.8197085+1.0322674*logn
# 132/250; 269/500; 551/1000; 837/1500; 1126/2000
# steep1: 140/250; 280/500; 575/1000; 830/1500; 1120/2000
# steep5: 135/250; 280/500; 565/1000; 830/1500; 1120/2000
# steep15: 115/250; 260/500; 550/1000; 825/1500; 1100/2000
### without steepness
lm(ylog~xlog+ind,data=data)
### logm=-0.5658+1.0018logn-0.0030steep
# linear mixed model
fit1 <- lme( ylog ~ xlog,
method = "ML",
random = reStruct( ~1+xlog | id, pdClass="pdSymm", REML=F),
data = data )
summary( fit1 )
fit1 <- lme( ylog ~ xlog,
method = "ML",
random = reStruct( ~1+xlog | id, pdClass="pdSymm", REML=F),
data = a )
summary( fit1 )
d <- data.frame("xlog"= log(c(250, 500, 1000, 1500, 2000)))
fitted <- exp(predict(fit1, new_data=d))
# GEE
fit.gee <- geeglm(ylog~xlog-1, data = data, id = id,
family=gaussian(), corstr = "exchangeable", std.err = "san.se")
summary(fit.gee)
d1 <- data.frame("nlog"= log(c(1000, 2000, 4000, 8000, 16000)),
"mlog"=log(c(565,1120,2225,4410,8960)))
fit <- lm(nlog~mlog,data=d1)
summary(fit)
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000)),
"mlog"=log(c(135,280,565,830,1120)))
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000)),
"mlog"=log(c(140,280,575,830,1120)))
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000)),
"mlog"=log(c(130,275,575,830,1100)))
fit <- lm(nlog~mlog,data=d1)
summary(fit)
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000,4000,8000,16000)),
"mlog"=log(c(135,280,565,830,1120,2225,4410,8960)))
fit <- lm(nlog~mlog,data=d1)
summary(fit)
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=data_step$mlog,labels=data_step$m,cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
axis(2,at=data_nonstep$mlog,labels=data_nonstep$m,cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
a<-data[which(data$id==2 |data$id==3 | data$id==15),]
##### m-bootstrap
#colnames(data) <- c("id","x", "no","y","steep","no")
##### sub-bootstrap
colnames(data) <- c("id","x", "y","no")
colnames(data) <- c("id","x", "y","no","steep","no")
colnames(data) <- c("model","x", "y","no","no","steep","no","no")
#head(data, 10)
data$ylog <- log(data$y)
data$xlog <- log(data$x)
data$ind <- ifelse(data$model=="step",1,0)
a$ylog <- log(a$y)
a$xlog <- log(a$x)
### with steepness
lm(ylog~xlog+steep,data=data)
### logm=-0.5658+1.0018logn-0.0030steep
# steep1: 136/250; 277/500; 567/1000; 862/1500; 1160/2000
# steep5: 133/250; 272/500; 556/1000; 845/1500; 1137/2000
# steep15: 126/250; 259/500; 529/1000; 804/1500; 1082/2000
### logm=-0.785+1.032logn-0.005steep
# steep1: 136/250; 277/500; 567/1000; 862/1500; 1160/2000
# steep5: 133/250; 272/500; 556/1000; 845/1500; 1137/2000
# steep15: 126/250; 259/500; 529/1000; 804/1500; 1082/2000
### logm=-0.8197085+1.0322674*logn
# 132/250; 269/500; 551/1000; 837/1500; 1126/2000
# steep1: 140/250; 280/500; 575/1000; 830/1500; 1120/2000
# steep5: 135/250; 280/500; 565/1000; 830/1500; 1120/2000
# steep15: 115/250; 260/500; 550/1000; 825/1500; 1100/2000
### without steepness
lm(ylog~xlog+ind,data=data)
### logm=-0.5658+1.0018logn-0.0030steep
# linear mixed model
fit1 <- lme( ylog ~ xlog,
method = "ML",
random = reStruct( ~1+xlog | id, pdClass="pdSymm", REML=F),
data = data )
summary( fit1 )
fit1 <- lme( ylog ~ xlog,
method = "ML",
random = reStruct( ~1+xlog | id, pdClass="pdSymm", REML=F),
data = a )
summary( fit1 )
d <- data.frame("xlog"= log(c(250, 500, 1000, 1500, 2000)))
fitted <- exp(predict(fit1, new_data=d))
# GEE
fit.gee <- geeglm(ylog~xlog-1, data = data, id = id,
family=gaussian(), corstr = "exchangeable", std.err = "san.se")
summary(fit.gee)
d1 <- data.frame("nlog"= log(c(1000, 2000, 4000, 8000, 16000)),
"mlog"=log(c(565,1120,2225,4410,8960)))
fit <- lm(nlog~mlog,data=d1)
summary(fit)
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000)),
"mlog"=log(c(135,280,565,830,1120)))
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000)),
"mlog"=log(c(140,280,575,830,1120)))
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000)),
"mlog"=log(c(130,275,575,830,1100)))
fit <- lm(nlog~mlog,data=d1)
summary(fit)
d1 <- data.frame("nlog"= log(c(250,500,1000,1500,2000,4000,8000,16000)),
"mlog"=log(c(135,280,565,830,1120,2225,4410,8960)))
fit <- lm(nlog~mlog,data=d1)
summary(fit)
library(kyotil)
myfigure(mfcol=c(1,2))
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=data_step$mlog,labels=data_step$m,cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
axis(2,at=data_nonstep$mlog,labels=data_nonstep$m,cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
#axis(2,at=data_step$mlog,labels=data_step$m,cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
#axis(2,at=data_nonstep$mlog,labels=data_nonstep$m,cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=c(6.0,7.0,8.0,9.0),labels=c(exp(6,7,8,9)),cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
axis(2,at=data_nonstep$mlog,labels=data_nonstep$m,cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
c(exp(6,7,8,9))
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=c(6.0,7.0,8.0,9.0),labels=exp(c(6,7,8,9)),cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
axis(2,at=data_nonstep$mlog,labels=data_nonstep$m,cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=log(c(500,1000,2000,4000,8000)),labels=c(500,1000,2000,4000,8000),cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
axis(2,at=data_nonstep$mlog,labels=data_nonstep$m,cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
library(geepack)
library(doBy)
library(nlme)
library(geepack)
data<-read.csv("/Users/huashuangcheng/Desktop/UWbiostats/Au19/thesis/rule.csv")
#data <- read.csv("C:\\Users\\46541\\Desktop\\help\\mn.csv")
#head(data)
######## step
data$nlog <- log(data$n)
data$mlog <- log(data$m)
data_step <- data[which(data$model=="step"),]
lm(mlog~nlog,data=data_step)
######## nonstep
data_nonstep <- data[which(data$model!="step"),]
lme( mlog ~ nlog,
method = "ML",
random = reStruct( ~1 | model, pdClass="pdSymm", REML=F),
data = data_nonstep )
####### pictures
library(kyotil)
myfigure(mfcol=c(1,2))
#Step
# no z and error
plot(data_step$nlog, data_step$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Step model")
axis(1,at=data_step$nlog,labels=data_step$n,cex.axis=0.7)
axis(2,at=log(c(500,1000,2000,4000,8000)),labels=c(500,1000,2000,4000,8000),cex.axis=0.7)
abline(a=-0.9207,b=0.9804)
# with z and error
#plot(data_nonstep$nlog, data_nonstep$mlog, type="b",cex=0.5, xaxt="n", yaxt="n",
#     xlab="Simple size n", ylab="Block size m",main="Non-Step models")
plot(data_nonstep$nlog, data_nonstep$mlog,cex=0.7, xaxt="n", yaxt="n",
xlab="Simple size n", ylab="Block size m",main="Non-Step models")
axis(1,at=data_nonstep$nlog,labels=data_nonstep$n,cex.axis=0.7)
axis(2,at=log(c(500,1000,2000,4000,8000,16000)),labels=c(500,1000,2000,4000,8000,16000),cex.axis=0.7)
abline(a=-0.5565,b=0.9961)
mydev.off(file="figures/linear_model_rule")
